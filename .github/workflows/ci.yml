name: telemetry-system CI/CD

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_version: ["1.0"]
    container:
      image: docker.io/jonnyrembo/telemetry-system:v1.0
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        COMMON_IMAGES_VERSION: "1.0"
        SOURCE_DIR: ${{ github.workspace }}
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ${{ github.workspace }}:/github/workspace  # Монтируем в стандартный путь
      options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare build environment
        run: |
          # Создаем необходимые директории
          mkdir -p /workspace/build
          mkdir -p /workspace/bin
          ls -la /workspace

      - name: Build project
        run: |
          cd workspace
          ./build.sh

      - name: Run all unit tests
        run: |
          cd /workspace/build
          ctest --output-on-failure --verbose

      - name: Start infrastructure and run functional tests
        run: |
          cd /workspace
          
          # Создаем .env файл
          echo "DOCKER_USERNAME=$DOCKER_USERNAME" > .env
          echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> .env
          echo "SOURCE_DIR=/github/workspace" >> .env
          
          # Запускаем сервер
          docker compose up -d telemetry_server
          
          # Ожидание готовности сервера
          timeout 30s sh -c 'until nc -z localhost 12345; do sleep 1; done'
          
          # Запускаем тесты
          docker compose run --rm functional_tests
          TEST_EXIT_CODE=$?
          
          # Останавливаем контейнеры
          docker compose down --volumes --remove-orphans
          
          exit $TEST_EXIT_CODE
